# ルーレットの最大値
#
# 　2<=n<=36のそれぞれのnについて、連続するn個の数の和が最大になる場合を求め、ヨーロピアンスタイルでの和がアメリカンスタイル
# での和よりも小さくなるnがいくつあるかを求めてください。
#
# ヨーロピアンスタイル
# 0, 32, 15, 19, 4, 21, 2, 25, 17, 34, 6, 27, 13, 36, 11, 30, 8, 23, 10, 5, 24, 16, 33, 1,
# 20, 14, 31, 9, 22, 18, 29, 7, 28, 12, 35, 3, 26
#
# 連続するn個の取り方は常に３７通り
# ということは３７個作って一番大きいのを出力すれば良い
# 配列は２週分作っとく
#
# アメリカンスタイル
# 0, 28, 9, 26, 30, 11, 7, 20, 32, 17, 5, 22, 34, 15, 3, 24, 36, 13, 1, 00, 27, 10, 25,
# 29, 12, 8, 19, 31, 18, 6, 21, 33, 16, 4, 23, 35, 14, 2
#


europian = [0, 32, 15, 19, 4, 21, 2, 25, 17, 34, 6, 27, 13, 36, 11, 30, 8, 23,
            10, 5, 24, 16, 33, 1, 20, 14, 31, 9, 22, 18, 29, 7, 28, 12, 35, 3, 26,
            0, 32, 15, 19, 4, 21, 2, 25, 17, 34, 6, 27, 13, 36, 11, 30, 8, 23,
            10, 5, 24, 16, 33, 1, 20, 14, 31, 9, 22, 18, 29, 7, 28, 12, 35, 3, 26]

american = [0, 28, 9, 26, 30, 11, 7, 20, 32, 17, 5, 22, 34, 15, 3, 24, 36, 13, 1, 00,
            27, 10, 25, 29, 12, 8, 19, 31, 18, 6, 21, 33, 16, 4, 23, 35, 14, 2,
            0, 28, 9, 26, 30, 11, 7, 20, 32, 17, 5, 22, 34, 15, 3, 24, 36, 13, 1, 00,
            27, 10, 25, 29, 12, 8, 19, 31, 18, 6, 21, 33, 16, 4, 23, 35, 14, 2]
            # ヨーロピアンスタイルとアメリカンスタイルの配列（最初に戻るのがわからず２回繰り返して対応）

counts = 0

for n in 2..36 do
  array_europian = []
  array_american = []  #からの配列を作成

  for m in 0..36 do
    sum_europian = 0
    sum_american = 0

    for l in m..m+n-1 do
      sum_europian += europian[l]
      sum_american += american[l] #連続するn個の和をだす
    end

    array_europian.push(sum_europian)
    array_american.push(sum_american) #配列とする
  end

  max_europian = array_europian.max
  max_american = array_american.max
  counts += 1 if max_europian < max_american

end

puts counts
